#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : require

#include "../common.glsl"

layout(set = 0, binding = 3) uniform accelerationStructureEXT TLAS;
layout(set = 2, binding = 0) uniform PFD { PerFrameData pfd; };
layout(set = 3, binding = 0) uniform sampler2D position_texture;
layout(set = 3, binding = 1, rgba16f) uniform image2D raytraced_shadows;

layout(location = 0) rayPayloadEXT vec4 shadow_payload;

void main() {
	vec2 pixel_center = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	vec2 uv = pixel_center / vec2(gl_LaunchSizeEXT.xy);

	vec4 origin = texture(position_texture, uv);
	vec4 light_direction = -pfd.directional_light.direction;

	uint rng_state = seed_thread((gl_LaunchIDEXT.y * gl_LaunchSizeEXT.y + gl_LaunchIDEXT.x) * pfd.frame_index * 386010683 * 936272639);
	float rnd1 = random01(rng_state);
	float rnd2 = random01(rng_state);
	vec3 cone_dir = normalize(uniform_sample_cone(vec2(rnd1, rnd2), 0.99995));
	mat3x3 R = onb_from_unit_vector(light_direction.xyz);

	shadow_payload = vec4(0.0, 0.0, 0.0, 0.0);
	traceRayEXT(TLAS, gl_RayFlagsOpaqueEXT | gl_RayFlagsSkipClosestHitShaderEXT | gl_RayFlagsTerminateOnFirstHitEXT, 
		0xFF, 0, 0, 0, origin.xyz, 0.1, R * cone_dir, 10000.0, 0);
	
	imageStore(raytraced_shadows, ivec2(gl_LaunchIDEXT.xy), shadow_payload);
}

