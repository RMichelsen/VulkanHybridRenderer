#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : require

#include "../common.glsl"

layout(set = 0, binding = 3) uniform accelerationStructureEXT TLAS;
layout(set = 1, binding = 0) uniform PerFrameData {
	mat4 camera_view;
	mat4 camera_proj;
	mat4 camera_view_inverse;
	mat4 camera_proj_inverse;
	DirectionalLight directional_light;
} pfd;
layout(set = 2, binding = 0) uniform sampler2D position_texture;
layout(set = 2, binding = 1, rgba8) uniform image2D raytraced_shadows;

layout(location = 0) rayPayloadEXT vec4 shadow_payload;

void main() {
	vec2 pixel_center = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	vec2 uv = pixel_center / vec2(gl_LaunchSizeEXT.xy);

	vec4 origin = texture(position_texture, uv);
	vec4 direction = -pfd.directional_light.direction;

	shadow_payload = vec4(0.0, 0.0, 0.0, 0.0);
	traceRayEXT(TLAS, gl_RayFlagsOpaqueEXT | gl_RayFlagsSkipClosestHitShaderEXT | gl_RayFlagsTerminateOnFirstHitEXT, 
		0xFF, 0, 0, 0, origin.xyz, 0.1, direction.xyz, 10000.0, 0);
	
	imageStore(raytraced_shadows, ivec2(gl_LaunchIDEXT.xy), shadow_payload);
}

