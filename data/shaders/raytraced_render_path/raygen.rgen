#version 460
#extension GL_GOOGLE_include_directive : require
#include "../common.glsl"
#include "../../../src/rendering_backend/glsl_common.h"

layout(set = 3, binding = 0, rgba8) uniform image2D output_image;

layout(location = 0) rayPayloadEXT vec4 payload;

void main() {
	vec2 pixel_center = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	vec2 uv_ = pixel_center / vec2(gl_LaunchSizeEXT.xy);
	vec2 uv = uv_ * 2.0 - 1.0;

	vec4 origin = pfd.camera_view_inverse * vec4(0, 0, 0, 1);
	vec4 target = pfd.camera_proj_inverse * vec4(uv.x, uv.y, 1, 1);
	vec4 direction = pfd.camera_view_inverse * vec4(normalize(target.xyz), 0);

	payload = vec4(0.0);
	traceRayEXT(TLAS, gl_RayFlagsOpaqueEXT, 0xFF, 0, 0, 0, origin.xyz, 0.1, direction.xyz, 10000.0, 0);
	
	imageStore(output_image, ivec2(gl_LaunchIDEXT.xy), payload);
}

